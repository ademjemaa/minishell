/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_split.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: abarbour <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/08/15 19:37:44 by abarbour          #+#    #+#             */
/*   Updated: 2019/11/10 18:01:11 by abarbour         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>

int		ft_pos_str(char c, char *str)
{
	int i;

	i = 0;
	while (*(str + i) != '\0')
	{
		if (c == *(str + i))
			return (i);
		i++;
	}
	return (-1);
}

int		ft_nbr_word(char *str, char *sep)
{
	int i;
	int nb;

	i = 0;
	nb = 0;
	while (*(str + i) != '\0')
	{
		if (ft_pos_str(*(str + i), sep) == -1)
		{
			while ((ft_pos_str(*(str + i), sep) == -1) && (*(str + i) != '\0'))
				i++;
			nb++;
		}
		else
			i++;
	}
	return (nb);
}

int		ft_nbc(char *str, char *sep)
{
	int i;

	i = 0;
	while ((ft_pos_str(*(str + i), sep) == -1) && (*(str + i) != '\0'))
		i++;
	return (i);
}

char	*cpy(char *src, char *sep, int size, int *count)
{
	int		i;
	char	*dest;

	dest = (char *)malloc(sizeof(char) * size + 1);
	if (!dest)
		return (NULL);
	i = 0;
	while ((ft_pos_str(*(src + i), sep) == -1) && *(src + i) != '\0')
	{
		*(dest + i) = *(src + i);
		i++;
	}
	*count += i;
	*(dest + i) = '\0';
	return (dest);
}

char	**ft_split(char *str, char *charset)
{
	char	**s;
	int		nbr_word;
	int		i;
	int		nbr;

	nbr_word = ft_nbr_word(str, charset);
	s = (char **)malloc(sizeof(char *) * nbr_word + 1);
	if (!s)
		return (NULL);
	i = 0;
	nbr = 0;
	while (*(str + i) != '\0')
	{
		if (ft_pos_str(*(str + i), charset) == -1)
		{
			*(s + nbr) = cpy(str + i, charset, ft_nbc(str + i, charset), &i);
			nbr++;
		}
		else
			i++;
	}
	*(s + nbr) = NULL;
	return (s);
}
